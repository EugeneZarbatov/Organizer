@model PagedList.IPagedList<Organizer.Models.Note>

@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Ежедневник";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div id="results">
    <div class="container-fluid">
        <div class="row content">
            <div class="col-md-3">
                <h2>Меню</h2>
                <p>
                    <button type="button" class="btn btn-default btn-block btn-info" onclick="location.href='@Url.Action("Create", "Home")'">Добавить запись</button>
                </p>
                @using (Ajax.BeginForm("Index", "Home", new AjaxOptions { UpdateTargetId = "results" }))
                {
                    <p>@Html.DropDownList("type", new SelectList(new String[] { "Все", "Встреча", "Дело", "Памятка" }), new { @class = "form-control", @value = ViewBag.NotesType })</p>
                    <p>@Html.DropDownList("duration", new SelectList(new String[] { "Список", "Месяц", "Неделя", "День" }), new { @class = "form-control", @value = ViewBag.Duration })</p>
                    <p>
                        <div class="input-group date" id="datetimepicker1">
                            <input type="text" name="beginDateTime" placeholder="Начало периода" class="form-control" value=@ViewBag.beginDateTime />
                            <span class="input-group-addon">
                                <span class="glyphicon glyphicon-calendar"></span>
                            </span>
                        </div>
                    </p>
                        <p>
                            <div class="input-group date" id="datetimepicker2">
                                <input type="text" name="endDateTime" placeholder="Конец периода" class="form-control" value=@ViewBag.endDateTime />
                                <span class="input-group-addon">
                                    <span class="glyphicon glyphicon-calendar"></span>
                                </span>
                            </div>
                        </p>
                        <p><button id="notesIndexSubmit" type="submit" class="btn btn-default btn-block btn-info">Применить фильтры</button></p>
                }
            </div>
            <div class="col-md-9">
                <h2>Ежедневник</h2>
                <div class="row">
                    @if (Model == null || Model.Count() <= 0)
                    {
                        <p><strong>По текущему запросу нет данных!</strong></p>
                    }
                    else
                    {
                        foreach (var item in Model)
                        {
                            <div class="list-group todo-list">
                                <div class="list-group-item todo-list-item">
                                    <div class="row">
                                        <div class="col-md-8">
                                            @switch (item.Type)
                                            {
                                                case "Встреча":
                                                    <span class="label label-primary">@item.Type</span>
                                                    break;
                                                case "Памятка":
                                                    <span class="label label-danger">@item.Type</span>
                                                    break;
                                                case "Дело":
                                                    <span class="label label-warning">@item.Type</span>
                                                    break;
                                            }
                                            @if (item.State)
                                            {
                                                <span class="label label-success">Выполнено</span>
                                            }
                                        </div>
                                        <div class="col-md-4 filter-buttons">
                                            <div class="btn-group pull-right" role="group">
                                                @if (!item.State)
                                                {
                                                    <div class="btn-group">
                                                        <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Done", "Home", new { id = @item.Id, page = @Model.PageNumber })'">
                                                            <span class="glyphicon glyphicon-ok"></span>
                                                            <span class="btn-text">Выполнить</span>
                                                        </button>
                                                    </div>
                                                }
                                                <div class="btn-group">
                                                    <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Edit", "Home", new { id = @item.Id })'">
                                                        <span class="glyphicon glyphicon-pencil"></span>
                                                    </button>
                                                </div>
                                                <div class="btn-group">
                                                    <button type="button" class="btn btn-default" onclick="if (confirm('Удалить запись?')) { location.href='@Url.Action("Delete", "Home", new { id = @item.Id })' }">
                                                        <span class="glyphicon glyphicon-trash"></span>
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div>
                                        <h4>
                                            @item.Subject
                                        </h4>
                                    </div>
                                    <div class="add-info">
                                        <div>
                                            <span class="glyphicon glyphicon-calendar"></span>
                                            <span class="add-info-text">@item.BeginDateTime</span>
                                            @if (item.EndDateTime != null)
                                            {
                                                <span class="add-info-text"> - @item.EndDateTime</span>
                                            }
                                        </div>
                                        <div>
                                            @if (item.Place != null)
                                            {
                                                <span class="glyphicon glyphicon-map-marker"></span>
                                                <span class="add-info-text">@item.Place</span>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        }
                        if (Model.PageCount != 1)
                        {
                            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, type = ViewBag.NotesType, duration = ViewBag.Duration, beginDateTime = ViewBag.beginDateTime, endDateTime = ViewBag.endDateTime }));
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>