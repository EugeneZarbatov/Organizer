@model PagedList.IPagedList<Organizer.Models.Note>

@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div class="row">
    @if (Model == null || Model.Count() <= 0)
    {
        <p><strong>По текущему запросу нет данных!</strong></p>
    }
    else
    {
        foreach (var item in Model)
        {
            <div class="list-group todo-list">
                <div class="list-group-item todo-list-item">
                    <div class="row">
                        @if (item.State)
                        {
                            <div class="col-md-6 col-xs-6">
                                @switch (item.Type)
                                {
                                    case "Встреча":
                                        <span class="label label-primary">@item.Type</span>
                                        break;
                                    case "Памятка":
                                        <span class="label label-danger">@item.Type</span>
                                        break;
                                    case "Дело":
                                        <span class="label label-warning">@item.Type</span>
                                        break;
                                }
                                <span class="label label-success">Выполнено</span>
                            </div>
                            <div class="col-md-6 col-xs-6 filter-buttons">
                                <div class="btn-group pull-right" role="group">
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Edit", "Home", new { id = @item.Id })'">
                                            <span class="glyphicon glyphicon-pencil"></span>
                                        </button>
                                    </div>
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-default" onclick="if (confirm('Удалить запись?')) { location.href='@Url.Action("Delete", "Home", new { id = @item.Id })' }">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                        else
                        {
                            <div class="col-md-4 col-xs-4">
                                @switch (item.Type)
                                {
                                    case "Встреча":
                                        <span class="label label-primary">@item.Type</span>
                                        break;
                                    case "Памятка":
                                        <span class="label label-danger">@item.Type</span>
                                        break;
                                    case "Дело":
                                        <span class="label label-warning">@item.Type</span>
                                        break;
                                }
                            </div>
                            <div class="col-md-8 col-xs-8 filter-buttons">
                                <div class="btn-group pull-right" role="group">
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Done", "Home", new { id = @item.Id, page = @Model.PageNumber })'">
                                            <span class="glyphicon glyphicon-ok"></span>
                                            <span class="btn-text">Выполнить</span>
                                        </button>
                                    </div>
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-default" onclick="location.href='@Url.Action("Edit", "Home", new { id = @item.Id })'">
                                            <span class="glyphicon glyphicon-pencil"></span>
                                        </button>
                                    </div>
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-default" onclick="if (confirm('Удалить запись?')) { location.href='@Url.Action("Delete", "Home", new { id = @item.Id })' }">
                                            <span class="glyphicon glyphicon-trash"></span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    <div>
                        <h4>
                            @item.Subject
                        </h4>
                    </div>
                    <div class="add-info">
                        <div>
                            <span class="glyphicon glyphicon-calendar"></span>
                            <span class="add-info-text">@item.BeginDateTime</span>
                            @if (item.EndDateTime != null)
                            {
                                <span class="add-info-text"> - @item.EndDateTime</span>
                            }
                        </div>
                        <div>
                            @if (item.Place != null)
                            {
                                <span class="glyphicon glyphicon-map-marker"></span>
                                <span class="add-info-text">@item.Place</span>
                            }
                        </div>
                    </div>
                </div>
            </div>
        }
        if (Model.PageCount != 1)
        {
            @Html.PagedListPager(Model, page => Url.Action("Search", "Home", new { page, type = ViewBag.NotesType, duration = ViewBag.Duration, beginDateTime = ViewBag.beginDateTime, endDateTime = ViewBag.endDateTime }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions() { HttpMethod = "GET", UpdateTargetId = "results"}));
        }
    }
</div>